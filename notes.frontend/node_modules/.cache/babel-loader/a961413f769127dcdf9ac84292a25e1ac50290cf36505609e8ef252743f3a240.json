{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Web\\\\notes.frontend\\\\src\\\\notes\\\\testing.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('');\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drop-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggle,\n      children: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedValue,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"option1\",\n          children: \"\\u041E\\u043F\\u0446\\u0438\\u044F 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"option2\",\n          children: \"\\u041E\\u043F\\u0446\\u0438\\u044F 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"option3\",\n          children: \"\\u041E\\u043F\\u0446\\u0438\\u044F 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043E \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435: \", selectedValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"E+LE6D7Vp+vnfOiTqHfAY7FjQ+I=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","_s","isOpen","setIsOpen","selectedValue","setSelectedValue","handleToggle","handleChange","event","target","value","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["C:/Users/user/Web/notes.frontend/src/notes/testing.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from 'react';\r\nimport '../App.css';\r\n\r\nconst Dropdown = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  const handleToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"drop-list\">\r\n      <button onClick={handleToggle}>Открыть список</button>\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          <select value={selectedValue} onChange={handleChange}>\r\n            <option value=\"\">Выберите значение</option>\r\n            <option value=\"option1\">Опция 1</option>\r\n            <option value=\"option2\">Опция 2</option>\r\n            <option value=\"option3\">Опция 3</option>\r\n          </select>\r\n        </div>\r\n      )}\r\n      <p>Выбрано значение: {selectedValue}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAqB,OAAO;AACpD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBH,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMK,YAAY,GAAIC,KAAqC,IAAK;IAC9DH,gBAAgB,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA;MAAQc,OAAO,EAAEP,YAAa;MAAAM,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrDf,MAAM,iBACLH,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5Bb,OAAA;QAAQW,KAAK,EAAEN,aAAc;QAACc,QAAQ,EAAEX,YAAa;QAAAK,QAAA,gBACnDb,OAAA;UAAQW,KAAK,EAAC,EAAE;UAAAE,QAAA,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3ClB,OAAA;UAAQW,KAAK,EAAC,SAAS;UAAAE,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxClB,OAAA;UAAQW,KAAK,EAAC,SAAS;UAAAE,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxClB,OAAA;UAAQW,KAAK,EAAC,SAAS;UAAAE,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eACDlB,OAAA;MAAAa,QAAA,GAAG,+FAAkB,EAACR,aAAa;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}