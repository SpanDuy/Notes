{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Web\\\\notes.frontend\\\\src\\\\notes\\\\NoteDetails.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Client } from '../api/api';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiClient = new Client('https://localhost:44397');\nconst Info = _ref => {\n  _s();\n  var _note$creationDate;\n  let {\n    someProp\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [note, setNote] = useState();\n  async function getNote() {\n    if (note !== undefined) {\n      if (note.id !== undefined) {\n        console.log('Note ID:', note.id);\n        const NoteDetailsVm = await apiClient.get(someProp || '', '1.0');\n        console.log('Received NoteDetailsVm:', NoteDetailsVm);\n        setNote(NoteDetailsVm);\n      }\n    }\n  }\n  useEffect(() => {\n    console.log('Calling getNote()');\n    getNote();\n  }, []);\n  console.log('Rendering Info component');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: note === null || note === void 0 ? void 0 : note.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: note === null || note === void 0 ? void 0 : note.details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: note === null || note === void 0 ? void 0 : (_note$creationDate = note.creationDate) === null || _note$creationDate === void 0 ? void 0 : _note$creationDate.toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Info, \"AlG+ZbKapSHaW2xeQ38tDyUuc7Q=\");\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useEffect","useState","Client","jsxDEV","_jsxDEV","apiClient","Info","_ref","_s","_note$creationDate","someProp","isOpen","setIsOpen","note","setNote","getNote","undefined","id","console","log","NoteDetailsVm","get","children","title","fileName","_jsxFileName","lineNumber","columnNumber","details","creationDate","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/user/Web/notes.frontend/src/notes/NoteDetails.tsx"],"sourcesContent":["import React, { FC, ReactElement, useRef, useEffect, useState, ChangeEvent } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport { CreateNoteDto, Client, NoteLookupDto, NoteDetailsVm } from '../api/api';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { create } from 'domain';\r\nimport '../App.css';\r\n\r\nconst apiClient = new Client('https://localhost:44397');\r\n\r\nconst Info = ({ someProp }: { someProp: string }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\tconst [note, setNote] = useState<NoteDetailsVm>();\r\n\r\n  async function getNote() {\r\n    if (note !== undefined) { \r\n      if (note.id !== undefined) {\r\n        console.log('Note ID:', note.id);\r\n        const NoteDetailsVm = await apiClient.get(someProp || '', '1.0');\r\n        console.log('Received NoteDetailsVm:', NoteDetailsVm);\r\n        setNote(NoteDetailsVm);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('Calling getNote()');\r\n    getNote();\r\n  }, []);\r\n\r\n  console.log('Rendering Info component');\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {note?.title}\r\n      </div>\r\n      <div>\r\n        {note?.details}\r\n      </div>\r\n      <div>\r\n        {note?.creationDate?.toLocaleDateString()}\r\n      </div>  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;"],"mappings":";;AAAA,OAAOA,KAAK,IAA8BC,SAAS,EAAEC,QAAQ,QAAqB,OAAO;AAEzF,SAAwBC,MAAM,QAAsC,YAAY;AAGhF,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,SAAS,GAAG,IAAIH,MAAM,CAAC,yBAAyB,CAAC;AAEvD,MAAMI,IAAI,GAAGC,IAAA,IAAwC;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EAAA,IAAvC;IAAEC;EAA+B,CAAC,GAAAH,IAAA;EAC9C,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAgB,CAAC;EAEhD,eAAec,OAAOA,CAAA,EAAG;IACvB,IAAIF,IAAI,KAAKG,SAAS,EAAE;MACtB,IAAIH,IAAI,CAACI,EAAE,KAAKD,SAAS,EAAE;QACzBE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEN,IAAI,CAACI,EAAE,CAAC;QAChC,MAAMG,aAAa,GAAG,MAAMf,SAAS,CAACgB,GAAG,CAACX,QAAQ,IAAI,EAAE,EAAE,KAAK,CAAC;QAChEQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,aAAa,CAAC;QACrDN,OAAO,CAACM,aAAa,CAAC;MACxB;IACF;EACF;EAEApB,SAAS,CAAC,MAAM;IACdkB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCJ,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAENG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EAEvC,oBACEf,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EACGT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNvB,OAAA;MAAAkB,QAAA,EACGT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACNvB,OAAA;MAAAkB,QAAA,EACGT,IAAI,aAAJA,IAAI,wBAAAJ,kBAAA,GAAJI,IAAI,CAAEgB,YAAY,cAAApB,kBAAA,uBAAlBA,kBAAA,CAAoBqB,kBAAkB,CAAC;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAnCIF,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}