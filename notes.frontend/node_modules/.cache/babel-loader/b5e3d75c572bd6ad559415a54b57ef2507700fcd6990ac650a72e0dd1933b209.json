{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Web\\\\notes.frontend\\\\src\\\\notes\\\\testing.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Client } from '../api/api';\nimport imageSrc from '../../src/pictures/DropList.png';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('');\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n  };\n  const apiClient = new Client('https://localhost:44397');\n  async function createNote(note) {\n    await apiClient.create('1.0', note);\n    console.log('Note is created.');\n  }\n  const NoteList = () => {\n    _s();\n    let textInput = useRef(null);\n    const [notes, setNotes] = useState(undefined);\n    async function getNotes() {\n      const noteListVm = await apiClient.getAll('1.0');\n      setNotes(noteListVm.notes);\n    }\n    useEffect(() => {\n      setTimeout(getNotes, 500);\n    }, []);\n    const handleKeyPress = event => {\n      if (event.key === 'Enter') {\n        const note = {\n          title: event.currentTarget.value,\n          details: \"\"\n        };\n        createNote(note);\n        event.currentTarget.value = '';\n        setTimeout(getNotes, 500);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSrc,\n        alt: \"\\u041A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0430\",\n        className: \"drop-list-img\",\n        onClick: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: notes === null || notes === void 0 ? void 0 : notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  };\n  _s(NoteList, \"8cwTUBFprme2+JxHwoxh6FxobwI=\");\n};\n_s2(Dropdown, \"E+LE6D7Vp+vnfOiTqHfAY7FjQ+I=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Client","imageSrc","jsxDEV","_jsxDEV","Dropdown","_s2","_s","$RefreshSig$","isOpen","setIsOpen","selectedValue","setSelectedValue","handleToggle","handleChange","event","target","value","apiClient","createNote","note","create","console","log","NoteList","textInput","notes","setNotes","undefined","getNotes","noteListVm","getAll","setTimeout","handleKeyPress","key","title","currentTarget","details","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/user/Web/notes.frontend/src/notes/testing.tsx"],"sourcesContent":["import React, { FC, ReactElement, useRef, useEffect, useState, ChangeEvent } from 'react';\r\nimport { CreateNoteDto, Client, NoteLookupDto } from '../api/api';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { create } from 'domain';\r\nimport imageSrc from '../../src/pictures/DropList.png'\r\nimport '../App.css';\r\n\r\nconst Dropdown = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  const handleToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\nconst apiClient = new Client('https://localhost:44397');\r\n\r\nasync function createNote(note: CreateNoteDto) {\r\n    await apiClient.create('1.0', note);\r\n    console.log('Note is created.');\r\n}\r\n\r\nconst NoteList: FC<{}> = (): ReactElement => {\r\n    let textInput = useRef(null);\r\n    const [notes, setNotes] = useState<NoteLookupDto[] | undefined>(undefined);\r\n\r\n    async function getNotes() {\r\n        const noteListVm = await apiClient.getAll('1.0');\r\n        setNotes(noteListVm.notes);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(getNotes, 500);\r\n    }, []);\r\n\r\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            const note: CreateNoteDto = {\r\n                title: event.currentTarget.value,\r\n                details: \"\"\r\n            };\r\n            createNote(note);\r\n            event.currentTarget.value = '';\r\n            setTimeout(getNotes, 500);\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div className=\"drop-list\">\r\n      <img src={imageSrc} alt=\"Картинка\" className=\"drop-list-img\" onClick={handleToggle} />\r\n      {isOpen && (\r\n        <div>\r\n          {notes?.map(note => (\r\n            <div>{note.title}</div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n}\r\nexport default Dropdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}