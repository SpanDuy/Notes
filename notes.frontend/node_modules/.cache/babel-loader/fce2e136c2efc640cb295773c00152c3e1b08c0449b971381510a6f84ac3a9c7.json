{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Web\\\\notes.frontend\\\\src\\\\notes\\\\NoteDetails.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Client } from '../api/api';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Info = _ref => {\n  _s();\n  var _note$creationDate;\n  let {\n    someProp\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('');\n  let textInput = useRef(null);\n  const [note, setNote] = useState();\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n  };\n  const apiClient = new Client('https://localhost:44397');\n  async function createNote(note) {\n    await apiClient.create('1.0', note);\n    console.log('Note is created.');\n  }\n  async function getNote() {\n    if (note !== undefined) {\n      if (note.id !== undefined) {\n        const NoteDetailsVm = await apiClient.get(someProp.id, '1.0'); // Используем оператор !\n        setNote(NoteDetailsVm);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: note === null || note === void 0 ? void 0 : note.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: note === null || note === void 0 ? void 0 : note.details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: note === null || note === void 0 ? void 0 : (_note$creationDate = note.creationDate) === null || _note$creationDate === void 0 ? void 0 : _note$creationDate.toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n_s(Info, \"Wqzkw5H+2McpicJHwi8S6BPDZcE=\");\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useRef","useState","Client","jsxDEV","_jsxDEV","Info","_ref","_s","_note$creationDate","someProp","isOpen","setIsOpen","selectedValue","setSelectedValue","textInput","note","setNote","handleToggle","handleChange","event","target","value","apiClient","createNote","create","console","log","getNote","undefined","id","NoteDetailsVm","get","children","title","fileName","_jsxFileName","lineNumber","columnNumber","details","creationDate","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/user/Web/notes.frontend/src/notes/NoteDetails.tsx"],"sourcesContent":["import React, { FC, ReactElement, useRef, useEffect, useState, ChangeEvent } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport { CreateNoteDto, Client, NoteLookupDto, NoteDetailsVm } from '../api/api';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { create } from 'domain';\r\nimport '../App.css';\r\n\r\nconst Info = ({ someProp }: { someProp: NoteDetailsVm }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\tlet textInput = useRef(null);\r\n\tconst [note, setNote] = useState<NoteDetailsVm>();\r\n\r\n  const handleToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\nconst apiClient = new Client('https://localhost:44397');\r\n\r\nasync function createNote(note: CreateNoteDto) {\r\n    await apiClient.create('1.0', note);\r\n    console.log('Note is created.');\r\n}\r\n\r\nasync function getNote() {\r\n  if (note !== undefined) { \r\n    if (note.id !== undefined) {\r\n      const NoteDetailsVm = await apiClient.get(someProp.id!, '1.0'); // Используем оператор !\r\n      setNote(NoteDetailsVm);\r\n    }\r\n  }\r\n}\r\n\r\nreturn (\r\n  <div>\r\n    <div>\r\n      {note?.title}\r\n    </div>\r\n    <div>\r\n      {note?.details}\r\n    </div>\r\n    <div>\r\n      {note?.creationDate?.toLocaleDateString()}\r\n    </div>  \r\n  </div>\r\n);\r\n};\r\n\r\nexport default Info;"],"mappings":";;AAAA,OAAOA,KAAK,IAAsBC,MAAM,EAAaC,QAAQ,QAAqB,OAAO;AAEzF,SAAwBC,MAAM,QAAsC,YAAY;AAGhF,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGC,IAAA,IAA+C;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EAAA,IAA9C;IAAEC;EAAsC,CAAC,GAAAH,IAAA;EACrD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACvD,IAAIa,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAgB,CAAC;EAEhD,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACzBN,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMQ,YAAY,GAAIC,KAAqC,IAAK;IAC9DN,gBAAgB,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAEH,MAAMC,SAAS,GAAG,IAAIpB,MAAM,CAAC,yBAAyB,CAAC;EAEvD,eAAeqB,UAAUA,CAACR,IAAmB,EAAE;IAC3C,MAAMO,SAAS,CAACE,MAAM,CAAC,KAAK,EAAET,IAAI,CAAC;IACnCU,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACnC;EAEA,eAAeC,OAAOA,CAAA,EAAG;IACvB,IAAIZ,IAAI,KAAKa,SAAS,EAAE;MACtB,IAAIb,IAAI,CAACc,EAAE,KAAKD,SAAS,EAAE;QACzB,MAAME,aAAa,GAAG,MAAMR,SAAS,CAACS,GAAG,CAACtB,QAAQ,CAACoB,EAAE,EAAG,KAAK,CAAC,CAAC,CAAC;QAChEb,OAAO,CAACc,aAAa,CAAC;MACxB;IACF;EACF;EAEA,oBACE1B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EACGjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNjC,OAAA;MAAA4B,QAAA,EACGjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuB;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACNjC,OAAA;MAAA4B,QAAA,EACGjB,IAAI,aAAJA,IAAI,wBAAAP,kBAAA,GAAJO,IAAI,CAAEwB,YAAY,cAAA/B,kBAAA,uBAAlBA,kBAAA,CAAoBgC,kBAAkB,CAAC;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;AAAC9B,EAAA,CA3CIF,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}