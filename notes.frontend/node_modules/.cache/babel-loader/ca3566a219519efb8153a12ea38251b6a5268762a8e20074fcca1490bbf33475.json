{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Web\\\\notes.frontend\\\\src\\\\notes\\\\NotesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Client } from '../api/api';\nimport { FormControl } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiClient = new Client('https://localhost:44397');\nasync function createNote(note) {\n  await apiClient.create('1.0', note);\n  console.log('Note is created.');\n}\nconst NoteList = () => {\n  _s();\n  let textInput = useRef(null);\n  const [notes, setNotes] = useState(undefined);\n  async function getNotes() {\n    const noteListVm = await apiClient.getAll('1.0');\n    setNotes(noteListVm.notes);\n  }\n  useEffect(() => {\n    getNotes();\n  }, []);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      const note = {\n        title: event.currentTarget.value\n      };\n      createNote(note);\n      event.currentTarget.value = '';\n      getNotes();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Notes\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        ref: textInput,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notes === null || notes === void 0 ? void 0 : notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteList, \"8cwTUBFprme2+JxHwoxh6FxobwI=\");\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Client","FormControl","jsxDEV","_jsxDEV","apiClient","createNote","note","create","console","log","NoteList","_s","textInput","notes","setNotes","undefined","getNotes","noteListVm","getAll","handleKeyPress","event","key","title","currentTarget","value","children","ref","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/user/Web/notes.frontend/src/notes/NotesList.tsx"],"sourcesContent":["import React, { FC, ReactElement, useRef, useEffect, useState } from 'react';\r\nimport { CreateNoteDto, Client, NoteLookupDto } from '../api/api';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { create } from 'domain';\r\n\r\nconst apiClient = new Client('https://localhost:44397');\r\n\r\nasync function createNote(note: CreateNoteDto) {\r\n    await apiClient.create('1.0', note);\r\n    console.log('Note is created.');\r\n}\r\n\r\nconst NoteList: FC<{}> = (): ReactElement => {\r\n    let textInput = useRef(null);\r\n    const [notes, setNotes] = useState<NoteLookupDto[] | undefined>(undefined);\r\n\r\n    async function getNotes() {\r\n        const noteListVm = await apiClient.getAll('1.0');\r\n        setNotes(noteListVm.notes);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, []);\r\n\r\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            const note: CreateNoteDto = {\r\n                title: event.currentTarget.value,\r\n            };\r\n            createNote(note);\r\n            event.currentTarget.value = '';\r\n            getNotes();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            Notes\r\n            <div>\r\n                <FormControl ref={textInput} onKeyPress={handleKeyPress} />\r\n            </div>\r\n            <div>\r\n                {notes?.map(note => (\r\n                    <div>{note.title}</div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default NoteList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAsBC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5E,SAAwBC,MAAM,QAAuB,YAAY;AACjE,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,SAAS,GAAG,IAAIJ,MAAM,CAAC,yBAAyB,CAAC;AAEvD,eAAeK,UAAUA,CAACC,IAAmB,EAAE;EAC3C,MAAMF,SAAS,CAACG,MAAM,CAAC,KAAK,EAAED,IAAI,CAAC;EACnCE,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;AACnC;AAEA,MAAMC,QAAgB,GAAGA,CAAA,KAAoB;EAAAC,EAAA;EACzC,IAAIC,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAA8BgB,SAAS,CAAC;EAE1E,eAAeC,QAAQA,CAAA,EAAG;IACtB,MAAMC,UAAU,GAAG,MAAMb,SAAS,CAACc,MAAM,CAAC,KAAK,CAAC;IAChDJ,QAAQ,CAACG,UAAU,CAACJ,KAAK,CAAC;EAC9B;EAEAf,SAAS,CAAC,MAAM;IACZkB,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAIC,KAA4C,IAAK;IACrE,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACvB,MAAMf,IAAmB,GAAG;QACxBgB,KAAK,EAAEF,KAAK,CAACG,aAAa,CAACC;MAC/B,CAAC;MACDnB,UAAU,CAACC,IAAI,CAAC;MAChBc,KAAK,CAACG,aAAa,CAACC,KAAK,GAAG,EAAE;MAC9BR,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAsB,QAAA,GAAK,OAED,eAAAtB,OAAA;MAAAsB,QAAA,eACItB,OAAA,CAACF,WAAW;QAACyB,GAAG,EAAEd,SAAU;QAACe,UAAU,EAAER;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACN5B,OAAA;MAAAsB,QAAA,EACKZ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,GAAG,CAAC1B,IAAI,iBACZH,OAAA;QAAAsB,QAAA,EAAMnB,IAAI,CAACgB;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CArCID,QAAgB;AAAAuB,EAAA,GAAhBvB,QAAgB;AAsCtB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}